WinMain() -> Log file created successfully
[INFO] TsFillInstanceExtensionNames() -> First call to vkEnumerateInstanceExtensionProperties() succeeded at 2753
[INFO] TsFillInstanceExtensionNames() -> Second call to vkEnumerateInstanceExtensionProperties() succeeded at 2797
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_device_group_creation
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_display
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_external_fence_capabilities
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_external_memory_capabilities
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_external_semaphore_capabilities
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_get_display_properties2
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_get_physical_device_properties2
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_get_surface_capabilities2
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_surface
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_surface_protected_capabilities
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_win32_surface
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_EXT_debug_report
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_EXT_debug_utils
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_EXT_direct_mode_display
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_EXT_surface_maintenance1
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_EXT_swapchain_colorspace
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_NV_external_memory_capabilities
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_KHR_portability_enumeration
[INFO] TsFillInstanceExtensionNames() -> Vulkan Extension Name = VK_LUNARG_direct_driver_loading
[INFO] TsFillInstanceExtensionNames() -> VK_KHR_SURFACE_EXTENSION_NAME found at 2967
[INFO] TsFillInstanceExtensionNames() -> VK_KHR_WIN32_SURFACE_EXTENSION_NAME found at 2989
[INFO] TsFillInstanceExtensionNames() -> Validation is ON and required VK_EXT_DEBUG_REPORT_EXTENSION_NAME is supported at 3029
[INFO] TsFillInstanceExtensionNames() -> Enabled Vulkan Instance Extension Name = VK_KHR_surface
[INFO] TsFillInstanceExtensionNames() -> Enabled Vulkan Instance Extension Name = VK_KHR_win32_surface
[INFO] TsFillInstanceExtensionNames() -> Enabled Vulkan Instance Extension Name = VK_EXT_debug_report
[INFO] TsCreateVulkanInstance() -> TsFillInstanceExtensionNames() succeeded at 2531
[INFO] TsFillValidationLayerNames() -> First call to vkEnumerateInstanceLayerProperties() succeeded with validationLayerCount 11 at 3097
[INFO] TsFillValidationLayerNames() -> Second call to vkEnumerateInstanceLayerProperties() succeeded at 3137
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_NV_optimus
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_NV_gr2608
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_LUNARG_api_dump
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_LUNARG_gfxreconstruct
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_KHRONOS_synchronization2
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_KHRONOS_validation
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_LUNARG_monitor
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_LUNARG_screenshot
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_KHRONOS_profiles
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_KHRONOS_shader_object
[INFO] TsFillValidationLayerNames() -> Vulkan Instance Layer Name = VK_LAYER_LUNARG_crash_diagnostic
[INFO] TsFillValidationLayerNames() -> VK_LAYER_KHRONOS_validation is supported at 3271
[INFO] TsFillValidationLayerNames() -> Enabled Vulkan Validation Layer Name VK_LAYER_KHRONOS_validation
[INFO] TsCreateVulkanInstance() -> TsFillValidationLayerNames() succeeded at 2559
[INFO] TsCreateInstanceInf() -> vkCreateInstance() succeeded at 2673
[INFO] TsCreateValidationCallbackFunction() -> vkGetInstanceProcAddr() succeeded to get function pointer for vkCreateDebugReportCallbackEXT() at 3339
[INFO] TsCreateValidationCallbackFunction() -> vkGetInstanceProcAddr() succeeded to get function pointer for vkDestroyDebugReportCallbackEXT() at 3363
[ERROR] TsCreateValidationCallbackFunction() -> vkCreateDebugReportCallbackEXT_fnptr() failed with 0 at 3397
[INFO] TsCreateVulkanInstance() -> TsCreateValidationCallbackFunction() succeeded at 2701
[INFO] TsInitialize() -> TsCreateVulkanInstance() succeeded at 789 
[INFO] TsGetSupportedSurface() -> vkCreateWin32SurfaceKHR() succeeded at 2481
[INFO] TsInitialize() -> TsGetSupportedSurface() succeeded at 813 
[INFO] TsGetPhysicalDevice() -> First call to vkEnumeratePhysicalDevices() succeeded at 2171
[INFO] TsGetPhysicalDevice() -> Second call to vkEnumeratePhysicalDevices() succeeded at 2201
[INFO] TsGetPhysicalDevice() -> Succeeded to free isQueueSurfaceSupported_array at 2297
[INFO] TsGetPhysicalDevice() -> Succeeded to free vkQueueFamilyProperties_array at 2311
[INFO] TsGetPhysicalDevice() -> vkGetPhysicalDeviceProperties() NVIDIA GeForce RTX 3050 6GB Laptop GPU physical device with graphics enabled is selected at 2335
[INFO] TsGetPhysicalDevice() -> is succeeded to select required physical device with graphics enabled at 2337
[INFO] TsGetPhysicalDevice() -> Selected physical device supports tessellation shader
[INFO] TsGetPhysicalDevice() -> Selected physical device supports geometry shader
[INFO] TsInitialize() -> TsGetPhysicalDevice() succeeded at 837 
[INFO] ********** Print Vulkan Info **********
[INFO] API Version = 1.4.303
[INFO] Device Name = NVIDIA GeForce RTX 3050 6GB Laptop GPU
[INFO] Device Type = Discrete GPU (dGPU)
[INFO] Vendor ID = 0x10de
[INFO] Device ID = 0x25ec
[INFO] API Version = 1.4.309
[INFO] Device Name = Intel(R) RaptorLake-S Mobile Graphics Controller
[INFO] Device Type = Integrated GPU (iGPU)
[INFO] Vendor ID = 0x8086
[INFO] Device ID = 0xa78b
[INFO] TsPrintVKInfo() -> Succeeded to free global vkPhysicalDevice_array at 2119
[INFO] TsInitialize() -> TsPrintVkInfo() succeeded at 861 
[INFO] TsFillDeviceExtensionNames() -> First call to vkEnumerateDeviceExtensionProperties() succeeded at 3457
[INFO] TsFillDeviceExtensionNames() -> Device Count = 237
[INFO] TsFillDeviceExtensionNames() -> Second call to vkEnumerateDeviceExtensionProperties() succeeded at 3505
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_16bit_storage
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_8bit_storage
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_acceleration_structure
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_bind_memory2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_buffer_device_address
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_calibrated_timestamps
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_compute_shader_derivatives
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_cooperative_matrix
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_copy_commands2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_create_renderpass2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_dedicated_allocation
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_deferred_host_operations
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_depth_stencil_resolve
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_descriptor_update_template
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_device_group
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_draw_indirect_count
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_driver_properties
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_dynamic_rendering
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_dynamic_rendering_local_read
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_fence
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_fence_win32
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_memory
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_memory_win32
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_semaphore
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_external_semaphore_win32
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_format_feature_flags2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_fragment_shader_barycentric
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_fragment_shading_rate
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_get_memory_requirements2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_global_priority
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_image_format_list
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_imageless_framebuffer
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_index_type_uint8
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_line_rasterization
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_load_store_op_none
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance1
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance3
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance4
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance5
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance6
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_maintenance7
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_map_memory2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_multiview
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_pipeline_binary
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_pipeline_executable_properties
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_pipeline_library
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_present_id
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_present_wait
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_push_descriptor
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_ray_query
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_ray_tracing_maintenance1
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_ray_tracing_pipeline
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_ray_tracing_position_fetch
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_relaxed_block_layout
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_sampler_mirror_clamp_to_edge
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_sampler_ycbcr_conversion
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_separate_depth_stencil_layouts
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_atomic_int64
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_clock
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_draw_parameters
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_expect_assume
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_float16_int8
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_float_controls
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_float_controls2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_integer_dot_product
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_maximal_reconvergence
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_non_semantic_info
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_quad_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_relaxed_extended_instruction
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_subgroup_extended_types
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_subgroup_rotate
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_subgroup_uniform_control_flow
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_shader_terminate_invocation
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_spirv_1_4
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_storage_buffer_storage_class
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_swapchain
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_swapchain_mutable_format
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_synchronization2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_timeline_semaphore
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_uniform_buffer_standard_layout
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_variable_pointers
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_vertex_attribute_divisor
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_decode_av1
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_decode_h264
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_decode_h265
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_decode_queue
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_encode_h264
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_encode_h265
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_encode_queue
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_maintenance1
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_video_queue
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_vulkan_memory_model
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_win32_keyed_mutex
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_workgroup_memory_explicit_layout
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_KHR_zero_initialize_workgroup_memory
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_4444_formats
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_attachment_feedback_loop_dynamic_state
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_attachment_feedback_loop_layout
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_blend_operation_advanced
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_border_color_swizzle
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_buffer_device_address
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_calibrated_timestamps
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_color_write_enable
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_conditional_rendering
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_conservative_rasterization
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_custom_border_color
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_bias_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_clamp_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_clamp_zero_one
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_clip_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_clip_enable
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_depth_range_unrestricted
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_descriptor_buffer
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_descriptor_indexing
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_device_fault
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_device_generated_commands
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_discard_rectangles
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_dynamic_rendering_unused_attachments
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_extended_dynamic_state
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_extended_dynamic_state2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_extended_dynamic_state3
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_external_memory_host
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_fragment_shader_interlock
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_full_screen_exclusive
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_global_priority
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_global_priority_query
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_graphics_pipeline_library
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_hdr_metadata
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_host_image_copy
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_host_query_reset
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_image_2d_view_of_3d
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_image_robustness
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_image_sliced_view_of_3d
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_image_view_min_lod
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_index_type_uint8
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_inline_uniform_block
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_legacy_vertex_attributes
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_line_rasterization
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_load_store_op_none
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_memory_budget
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_memory_priority
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_mesh_shader
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_multi_draw
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_mutable_descriptor_type
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_nested_command_buffer
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_non_seamless_cube_map
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_opacity_micromap
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pageable_device_local_memory
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pci_bus_info
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pipeline_creation_cache_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pipeline_creation_feedback
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pipeline_library_group_handles
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_pipeline_robustness
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_post_depth_coverage
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_primitive_topology_list_restart
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_primitives_generated_query
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_private_data
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_provoking_vertex
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_queue_family_foreign
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_robustness2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_sample_locations
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_sampler_filter_minmax
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_scalar_block_layout
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_separate_stencil_usage
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_atomic_float
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_demote_to_helper_invocation
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_image_atomic_int64
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_module_identifier
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_object
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_replicated_composites
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_subgroup_ballot
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_subgroup_vote
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_shader_viewport_index_layer
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_subgroup_size_control
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_swapchain_maintenance1
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_texel_buffer_alignment
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_tooling_info
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_transform_feedback
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_vertex_attribute_divisor
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_vertex_input_dynamic_state
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_ycbcr_2plane_444_formats
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_EXT_ycbcr_image_arrays
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_acquire_winrt_display
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_clip_space_w_scaling
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_cluster_acceleration_structure
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_compute_shader_derivatives
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_cooperative_matrix
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_cooperative_vector
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_copy_memory_indirect
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_corner_sampled_image
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_coverage_reduction_mode
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_cuda_kernel_launch
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_dedicated_allocation
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_dedicated_allocation_image_aliasing
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_descriptor_pool_overallocation
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_device_diagnostic_checkpoints
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_device_diagnostics_config
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_device_generated_commands
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_device_generated_commands_compute
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_external_memory
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_external_memory_win32
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_fill_rectangle
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_fragment_coverage_to_color
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_fragment_shader_barycentric
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_fragment_shading_rate_enums
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_framebuffer_mixed_samples
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_geometry_shader_passthrough
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_inherited_viewport_scissor
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_linear_color_attachment
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_low_latency
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_low_latency2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_memory_decompression
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_mesh_shader
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_optical_flow
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_partitioned_acceleration_structure
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_present_metering
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_raw_access_chains
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_ray_tracing
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_ray_tracing_invocation_reorder
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_ray_tracing_motion_blur
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_representative_fragment_test
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_sample_mask_override_coverage
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_scissor_exclusive
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_shader_atomic_float16_vector
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_shader_image_footprint
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_shader_sm_builtins
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_shader_subgroup_partitioned
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_shading_rate_image
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_viewport_array2
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_viewport_swizzle
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NV_win32_keyed_mutex
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NVX_binary_import
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NVX_image_view_handle
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_NVX_multiview_per_view_attributes
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_AMD_buffer_marker
[INFO] TsFillDeviceExtensionNames() -> Vulkan Device Extension Name = VK_GOOGLE_user_type
[INFO] TsFillDeviceExtensionNames() -> VK_KHR_SWAPCHAIN_EXTENSION_NAME found at 3633
[INFO] TsFillDeviceExtensionNames() -> Enabled Vulkan Device Extension Name = VK_KHR_swapchain
[INFO] TsCreateVulkanDevice() -> TsFillDeviceExtensionNames() succeeded at 3699
[INFO] TsCreateVulkanDevice() -> vkCreateDevice() succeeded at 3787
[INFO] TsInitialize() -> TsCreateVulkanDevice() succeeded at 885 
[INFO] TsGetDeviceQueue() -> vkGetDeviceQueue() succeeded
[INFO] TsGetPhysicalDeviceSurfaceFormatAndColorSpace() -> First call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeeded at 3881
[INFO] TsGetPhysicalDeviceSurfaceFormatAndColorSpace() -> Second call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeeded at 3913
[INFO] TsGetPhysicalDeviceSurfaceFormatAndColorSpace() -> vkSurfaceFormatKHR_array freed successfully vkFormat_color: 44 and vkColorSpaceKHR: 0
[INFO] TsCreateSwapchain() -> TsGetPhysicalDeviceSurfaceFormatAndColorSpace() succeeded at 4151 
[INFO] TsCreateSwapchain() -> vkGetPhysicalDeviceSurfaceCapabilitiesKHR() succeeded at 4181 
[INFO] TsCreateSwapchain() -> Swapchain Image width x height = 784 x 561 maxImageCount = 8 and minImageCount = 2 at 4225
[INFO] TsGetPhysicalDevicePresentMode() -> First call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeeded at 4013
[INFO] TsGetPhysicalDevicePresentMode() -> Second call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeeded at 4045
[INFO] TsGetPhysicalDevicePresentMode() -> vkPresentModeKHR_array freed successfully vkPresentModeKHR: 1 
[INFO] TsCreateSwapchain() -> TsGetPhysicalDevicePresentMode() succeeded at 4305 
[INFO] TsCreateSwapchain() -> vkCreateSwapchainKHR() succeeded at 4369 
[INFO] TsInitialize() -> TsCreateSwapchain() succeeded at 919 
[INFO] TsCreateImagesAndImageViews() -> vkGetSwapchainImagesKHR() first call with swapchain desired image count: 2 succeeded at 4425 
[INFO] TsCreateImagesAndImageViews() -> vkGetSwapchainImagesKHR() second call succeeded at 4457 
[INFO] TsCreateImagesAndImageViews() -> vkCreateImageView() for iteration:0 succeeded at 4539 
[INFO] TsCreateImagesAndImageViews() -> vkCreateImageView() for iteration:1 succeeded at 4539 
[INFO] TsInitialize() -> TsCreateImagesAndImageViews() succeeded gives swapchain image count: 2 at 943 
[INFO] TsCreateCommandPool() -> vkCreateCommandPool() second call succeeded at 4609 
[INFO] TsInitialize() -> TsCreateCommandPool() succeeded at 967 
[INFO] TsCreateCommandBuffers() -> vkAllocateCommandBuffers() for iteration:0 succeeded at 4695 
[INFO] TsCreateCommandBuffers() -> vkAllocateCommandBuffers() for iteration:1 succeeded at 4695 
[INFO] TsInitialize() -> TsCreateCommandBuffers() succeeded at 991 
[INFO] TsCreateVertexBuffer() -> vkCreateBuffer() succeeded at 4795 
[INFO] TsCreateVertexBuffer() -> vkAllocateMemory() succeeded at 4887 
[INFO] TsCreateVertexBuffer() -> vkBindBufferMemory() succeeded at 4911 
[INFO] TsCreateVertexBuffer() -> vkMapMemory() succeeded at 4953 
[INFO] TsInitialize() -> TsCreateVertexBuffer() succeeded at 1015 
[INFO] TsCreateShaders() -> Succeeded to open Shader.vert.spv at 5019
[INFO] TsCreateShaders() -> Succeeded to read Shader.vert.spv at 5067
[INFO] TsCreateShaders() -> vkCreateShaderModule() Succeeded at 5113
[INFO] TsCreateShaders() -> Vertex Shader Module is successfully created!!!
[INFO] TsCreateShaders() -> Succeeded to open Shader.frag.spv at 5163
[INFO] TsCreateShaders() -> Succeeded to read Shader.frag.spv at 5211
[INFO] TsCreateShaders() -> vkCreateShaderModule() Succeeded in fragment shader at 5257
[INFO] TsCreateShaders() -> Fragment Shader Module is successfully created!!!
[INFO] TsInitialize() -> TsCreateShaders() succeeded at 1039 
[INFO] TsCreateDescriptorSetLayout() -> vkCreateDescriptorSetLayout() Succeeded at 5335
[INFO] TsInitialize() -> TsCreateDescriptorSetLayout() succeeded at 1063 
[INFO] TsCreatePipelineLayout() -> vkCreatePipelineLayoutg() Succeeded at 5403
[INFO] TsInitialize() -> TsCreatePipelineLayout() succeeded at 1087 
[INFO] TsCreateRenderPass() -> vkCreateRenderPass() succeeded at 5551 
[INFO] TsInitialize() -> TsCreateRenderPass() succeeded at 1111 
[INFO] TsCreatePipeline() -> vkCreatePipelineCache() Succeeded at 5907
[INFO] TsCreatePipeline() -> vkCreateGraphicsPipelines() Succeeded at 6011
[INFO] TsCreatePipeline() -> vkDestroyPipelineCache() Succeeded at 6027
[INFO] TsInitialize() -> TsCreatePipeline() succeeded at 1135 
[INFO] TsCreateFrameBuffers() -> vkCreateFramebuffer() succeeded  for 0 index at 6123 
[INFO] TsCreateFrameBuffers() -> vkCreateFramebuffer() succeeded  for 1 index at 6123 
[INFO] TsInitialize() -> TsCreateFrameBuffers() succeeded at 1159 
[INFO] TsCreateSemaphores() -> vkCreateSemaphore() succeeded for vkSemaphore_backbuffer at 6187 
[INFO] TsCreateSemaphores() -> vkCreateSemaphore() succeeded for vkSemaphore_rendercomplete at 6211 
[INFO] TsInitialize() -> TsCreateSemaphores() succeeded at 1183 
[INFO] TsCreateFences() -> vkCreateFence() succeeded for 0 index at 6283 
[INFO] TsCreateFences() -> vkCreateFence() succeeded for 1 index at 6283 
[INFO] TsInitialize() -> TsCreateFences() succeeded at 1207 
[INFO] TsBuildCommandBuffers() -> vkResetCommandBuffer() succeeded for 0 index at 6335 
[INFO] TsBuildCommandBuffers() -> vkBeginCommandBuffer() succeeded for 0 index at 6371 
[INFO] TsBuildCommandBuffers() -> vkEndCommandBuffer() succeeded for 0 index at 6463 
[INFO] TsBuildCommandBuffers() -> vkResetCommandBuffer() succeeded for 1 index at 6335 
[INFO] TsBuildCommandBuffers() -> vkBeginCommandBuffer() succeeded for 1 index at 6371 
[INFO] TsBuildCommandBuffers() -> vkEndCommandBuffer() succeeded for 1 index at 6463 
[INFO] TsInitialize() -> TsBuildCommandBuffers() succeeded at 1249 
[INFO] Winmain() TsInitialize() succeeded
[INFO] TsUninitialize() -> vkDeviceWaitIdle() is done
[INFO] TsUninitialize() -> vkDestroyFence() is successfully done for 0 index
[INFO] TsUninitialize() -> vkDestroyFence() is successfully done for 1 index
[INFO] TsUninitialize() -> vkFence_array released successfully
[INFO] TsUninitialize() -> vkSemaphore_rendercomplete released successfully
[INFO] TsUninitialize() -> vkSemaphore_backbuffer released successfully
[INFO] TsUninitialize() -> vkDestroyFramebuffer() is successfully done for 0 index
[INFO] TsUninitialize() -> vkDestroyFramebuffer() is successfully done for 1 index
[INFO] TsUninitialize() -> vkFrameBuffer_array released successfully
[INFO] TsUninitialize() -> vkDestroyPipelineLayout() vkPipelineLayout is successfully released
[INFO] TsUninitialize() -> vkDestroyDescriptorSetLayout() vkDescriptorSetLayout is successfully released
[INFO] TsUninitialize() -> vkDestroyShaderModule() vkShaderModule_fragment_shader is successfully done
[INFO] TsUninitialize() -> vkDestroyShaderModule() vkShaderModule_vertex_shader is successfully done
[INFO] TsUninitialize() -> vkFreeMemory() is successfully done
[INFO] TsUninitialize() -> vkDestroyBuffer() is successfully done
[INFO] TsUninitialize() -> vkDestroyPipeline() is successfully done
[INFO] TsUninitialize() -> vkDestroyRenderPass() is successfully done
[INFO] TsUninitialize() -> vkFreeCommandBuffers() is successfully done for iteration: 0
[INFO] TsUninitialize() -> vkFreeCommandBuffers() is successfully done for iteration: 1
[INFO] TsUninitialize() -> vkCommandBuffer_array is successfully freed
[INFO] TsUninitialize() -> vkDestroyCommandPool() is successfully done
[INFO] TsUninitialize() -> vkDestroyImageView() is successfully done for iteration: 0
[INFO] TsUninitialize() -> vkDestroyImageView() is successfully done for iteration: 1
[INFO] TsUninitialize() -> swapchainImageView_array is successfully destroyed
[INFO] TsUninitialize() -> swapchainImage_array is successfully destroyed
[INFO] TsUninitialize() -> vkDestroySwapchainKHR() is successfully done
[INFO] TsUninitialize() -> vkDestroyDevice() is successfully done
[INFO] TsUninitialize() -> vkDestroySurfaceKHR() successfully done
[INFO] TsUninitialize() -> vkDestroyInstance() successfully done
[INFO] TsUninitialize() -> Log file closed successfully and program closed successfully
